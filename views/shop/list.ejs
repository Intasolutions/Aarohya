<%- include('../partials/header') %>

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>
  :root {
    --primary: #cbbba1;
    --secondary: #a48a7b;
    --accent: #946038;
    --light: #ededed;
    --dark: #5c4433;
    --bg: #fafafa;
  }

  body {
    font-family: 'Arial', sans-serif;
    background: var(--bg);
    color: var(--dark);
  }

  /* Sidebar Container */
  .shop-sidebar {
    width: 280px;
    background: white;
    padding: 1.5rem;
    border-radius: 12px;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
    border: 1px solid var(--secondary);
    position: sticky;
    top: 20px;
    z-index: 10;
    transition: transform 0.3s ease;
  }

  /* Sidebar Header */
  .sidebar-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .sidebar-header h4 {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--dark);
  }

  .sidebar-toggle {
    display: none;
    background: var(--accent);
    border: none;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    font-size: 1rem;
    cursor: pointer;
  }

  .sidebar-toggle:hover {
    background: var(--primary);
    color: var(--dark);
  }

  /* Filter Section */
  .filter-section {
    margin-bottom: 1.5rem;
  }

  .filter-section h5 {
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--dark);
    margin-bottom: 1rem;
  }

  .shop-filter select,
  .shop-filter input {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background: var(--light);
    border: 1px solid var(--secondary);
    border-radius: 8px;
    padding: 0.85rem 1.25rem;
    font-size: 1rem;
    width: 100%;
    transition: all 0.3s ease;
    cursor: pointer;
    font-weight: 500;
  }

  .shop-filter select {
    background: var(--light) url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%235c4433' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E") no-repeat right 1rem center;
    background-size: 1rem;
  }

  .shop-filter select:hover,
  .shop-filter input:hover {
    border-color: var(--accent);
    background: #f9f9f9;
  }

  .shop-filter select:focus,
  .shop-filter input:focus {
    outline: none;
    border-color: var(--accent);
    box-shadow: 0 0 8px rgba(148, 96, 56, 0.3);
    background: white;
  }

  /* Price Slider */
  .price-slider-wrap {
    width: 100%;
    margin: 1.5rem 0;
    padding: 0 10px;
  }

  .price-input {
    display: flex;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .price-input .field {
    display: flex;
    align-items: center;
    width: 100%;
    height: 40px;
  }

  .price-input .field span {
    font-size: 0.95rem;
    font-weight: 500;
    color: var(--dark);
    margin-right: 0.5rem;
  }

  .price-input .field input {
    width: 100%;
    height: 100%;
    font-size: 0.95rem;
    text-align: center;
    border-radius: 6px;
    border: 1px solid var(--secondary);
    padding: 0.5rem;
    transition: all 0.3s ease;
  }

  .price-input .field input:focus {
    border-color: var(--accent);
    box-shadow: 0 0 6px rgba(148, 96, 56, 0.3);
  }

  .price-input .separator {
    width: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1rem;
    color: var(--dark);
  }

  input[type="number"]::-webkit-outer-spin-button,
  input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
  }

  .slider {
    height: 6px;
    position: relative;
    background: var(--light);
    border-radius: 6px;
  }

  .slider .progress {
    height: 100%;
    position: absolute;
    border-radius: 6px;
    background: var(--accent);
    transition: all 0.3s ease;
  }

  .range-input {
    position: relative;
  }

  .range-input input {
    position: absolute;
    width: 100%;
    height: 6px;
    top: -5px;
    background: none;
    pointer-events: none;
    -webkit-appearance: none;
    -moz-appearance: none;
  }

  input[type="range"]::-webkit-slider-thumb {
    height: 18px;
    width: 18px;
    border-radius: 50%;
    background: var(--accent);
    border: 2px solid var(--primary);
    pointer-events: auto;
    -webkit-appearance: none;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
    cursor: pointer;
    transition: all 0.2s ease;
  }

  input[type="range"]::-webkit-slider-thumb:hover {
    background: var(--primary);
    transform: scale(1.1);
  }

  input[type="range"]::-moz-range-thumb {
    height: 14px;
    width: 14px;
    border-radius: 50%;
    background: var(--accent);
    border: 2px solid var(--primary);
    pointer-events: auto;
    -moz-appearance: none;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
    cursor: pointer;
    transition: all 0.2s ease;
  }

  input[type="range"]::-moz-range-thumb:hover {
    background: var(--primary);
    transform: scale(1.1);
  }

  /* Buttons */
  .shop-filter button {
    background: var(--accent);
    border: none;
    color: white;
    padding: 0.85rem 1.5rem;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: bold;
    cursor: pointer;
    width: 100%;
    transition: all 0.3s ease;
  }

  .shop-filter button:hover {
    background: var(--primary);
    color: var(--dark);
    transform: translateY(-2px);
  }

  /* Fixed Filter Button */
  #fixedFilterBtn {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    width: 120px;
    background: linear-gradient(135deg, var(--accent) 0%, #7b4f2a 100%);
    color: white;
    padding: 0.75rem 1.25rem;
    font-size: 1rem;
    font-weight: 600;
    display: none;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    z-index: 1100;
    cursor: pointer;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
    border-radius: 10px;
    transition: all 0.3s ease;
  }

  #fixedFilterBtn:hover {
    background: linear-gradient(135deg, var(--primary) 0%, #a48a7b 100%);
    color: var(--dark);
    transform: translate(-50%, -3px);
  }

  #fixedFilterBtn i {
    font-size: 1.2rem;
  }

  /* Close Button for Mobile */
  .mobile-close-btn {
    display: none;
    background: var(--accent);
    border: none;
    color: white;
    padding: 0.85rem 1.5rem;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: bold;
    cursor: pointer;
    width: 100%;
    transition: all 0.3s ease;
  }

  .mobile-close-btn:hover {
    background: var(--primary);
    color: var(--dark);
    transform: translateY(-2px);
  }

  /* Main Content */
  .main-content {
    flex: 1;
    padding-left: 2rem;
  }

  /* Responsive Design */
  @media (max-width: 992px) {
    #fixedFilterBtn {
      display: flex;
    }

    .shop-sidebar {
      position: fixed;
      left: 0;
      top: 0;
      height: 100%;
      transform: translateX(-100%);
      z-index: 1000;
      width: 280px;
      overflow-y: auto;
    }

    .shop-sidebar.active {
      transform: translateX(0);
    }

    .sidebar-toggle {
      display: block;
    }

    .mobile-close-btn {
      display: block;
    }

    .main-content {
      padding-left: 0;
      padding-bottom: 80px;
    }
  }

  @media (min-width: 993px) {
    #fixedFilterBtn {
      display: none !important;
    }
  }

  @media (max-width: 768px) {
    .price-input {
      flex-direction: column;
      gap: 1rem;
    }

    .price-input .separator {
      display: none;
    }
  }

  /* Product Cards */
  .product-card {
    background: white;
    border-radius: 12px;
    padding: 1rem;
    margin-bottom: 1.5rem;
    box-shadow: 0 6px 20px rgba(0,0,0,0.08);
    transition: transform 0.2s;
  }

  .product-card:hover {
    transform: translateY(-5px);
  }

  .product-img-wrapper {
    position: relative;
  }

  .product-img {
    width: 100%;
    border-radius: 12px;
  }

  .product-actions {
    position: absolute;
    top: 10px;
    right: 10px;
    display: flex;
    flex-direction: column;
    gap: 5px;
  }

  .product-actions button,
  .product-action-btn {
    background: var(--primary);
    border: none;
    color: white;
    padding: 0.5rem;
    border-radius: 50%;
    cursor: pointer;
  }

  .price-wrap {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }

  .old-price {
    text-decoration: line-through;
    color: #999;
  }
</style>

<div class="container-fluid">
  <div class="d-flex">
    <!-- Sidebar -->
    <div class="shop-sidebar" id="shopSidebar">
      <div class="sidebar-header">
        <h4>Filters</h4>
        <button class="sidebar-toggle" id="closeSidebar">Close</button>
      </div>
      <form method="GET" class="shop-filter">
        <div class="filter-section">
          <h5>Category</h5>
          <select name="category">
            <option value="">All Categories</option>
            <% categories.forEach(c => { %>
              <option value="<%= c._id %>" <%= filters.category === c._id.toString() ? "selected" : "" %>>
                <%= c.name %>
              </option>
            <% }) %>
          </select>
        </div>

        <div class="filter-section">
          <h5>Subcategory</h5>
          <select name="subcategory">
            <option value="">All Subcategories</option>
            <% subcategories.forEach(s => { %>
              <option value="<%= s._id %>" <%= filters.subcategory === s._id.toString() ? "selected" : "" %>>
                <%= s.name %>
              </option>
            <% }) %>
          </select>
        </div>

        <div class="filter-section">
          <h5>Color</h5>
          <select name="color">
            <option value="">All Colors</option>
            <option value="Silver" <%= filters.color === "Silver" ? "selected" : "" %>>Silver</option>
            <option value="Gold" <%= filters.color === "Gold" ? "selected" : "" %>>Gold</option>
            <option value="Rose Gold" <%= filters.color === "Rose Gold" ? "selected" : "" %>>Rose Gold</option>
          </select>
        </div>

        <!-- Price Range Slider -->
        <div class="filter-section">
          <h5>Price Range</h5>
          <div class="price-slider-wrap">
            <div class="price-input">
              <div class="field">
                <span>Min</span>
                <input type="number" class="input-min" id="minPriceInput" name="minPrice" value="<%= filters.minPrice || 0 %>">
              </div>
              <div class="separator">-</div>
              <div class="field">
                <span>Max</span>
                <input type="number" class="input-max" id="maxPriceInput" name="maxPrice" value="<%= filters.maxPrice || 1000 %>">
              </div>
            </div>
            <div class="slider">
              <div class="progress" id="priceSliderRange"></div>
            </div>
            <div class="range-input">
              <input type="range" class="range-min" id="minPriceRange" min="0" max="1000" value="<%= filters.minPrice || 0 %>" step="10">
              <input type="range" class="range-max" id="maxPriceRange" min="0" max="1000" value="<%= filters.maxPrice || 1000 %>" step="10">
            </div>
          </div>
        </div>

        <div class="filter-section">
          <h5>Sort By</h5>
          <select name="sort">
            <option value="newest" <%= filters.sort === "newest" ? "selected" : "" %>>Newest</option>
            <option value="oldest" <%= filters.sort === "oldest" ? "selected" : "" %>>Oldest</option>
            <option value="priceAsc" <%= filters.sort === "priceAsc" ? "selected" : "" %>>Price: Low to High</option>
            <option value="priceDesc" <%= filters.sort === "priceDesc" ? "selected" : "" %>>Price: High to Low</option>
          </select>
        </div>

        <button type="submit">Apply Filters</button>
        <button type="button" class="mobile-close-btn mt-3" id="mobileCloseSidebar">Close Filters</button>
      </form>
    </div>

    <!-- Main Content -->
    <div class="main-content">
      <div class="row">
        <% products.forEach(product => { %>
          <div class="col-md-3 col-sm-6">
            <div class="product-card">
              <div class="product-img-wrapper">
                <img src="/public/<%= product.productImage[0] %>" class="product-img" alt="Product">
                <div class="product-actions">
                  <button><i class="far fa-heart"></i></button>
                  <a href="/product/<%= product._id %>" class="product-action-btn">
                    <i class="far fa-eye"></i>
                  </a>
                </div>
              </div>
              <h6 class="mt-3"><%= product.productName %></h6>
              <div class="price-wrap">
                <span class="price">₹<%= product.salePrice %></span>
                <% if (product.regularPrice > product.salePrice) { %>
                  <span class="old-price">₹<%= product.regularPrice %></span>
                <% } %>
              </div>
            </div>
          </div>
        <% }) %>
      </div>
    </div>
  </div>
</div>

<!-- Fixed Filter Button -->
<button id="fixedFilterBtn">
  <i class="fas fa-filter"></i> Filters
</button>

<script>
  // Sidebar toggle
  const sidebar = document.getElementById("shopSidebar");
  const openSidebarBtn = document.getElementById("fixedFilterBtn");
  const closeSidebarBtn = document.getElementById("closeSidebar");
  const mobileCloseSidebarBtn = document.getElementById("mobileCloseSidebar");

  openSidebarBtn.addEventListener("click", () => {
    sidebar.classList.add("active");
    openSidebarBtn.style.display = "none";
  });

  closeSidebarBtn.addEventListener("click", () => {
    sidebar.classList.remove("active");
    openSidebarBtn.style.display = "flex";
  });

  mobileCloseSidebarBtn.addEventListener("click", () => {
    sidebar.classList.remove("active");
    openSidebarBtn.style.display = "flex";
  });

  // Price slider logic
  const rangeInput = document.querySelectorAll(".range-input input");
  const priceInput = document.querySelectorAll(".price-input input");
  const range = document.querySelector(".slider .progress");
  let priceGap = 10;

  priceInput.forEach((input) => {
    input.addEventListener("input", (e) => {
      let minPrice = parseInt(priceInput[0].value);
      let maxPrice = parseInt(priceInput[1].value);

      if (maxPrice - minPrice >= priceGap && maxPrice <= rangeInput[1].max && minPrice >= rangeInput[0].min) {
        if (e.target.className === "input-min") {
          rangeInput[0].value = minPrice;
          range.style.left = ((minPrice / rangeInput[0].max) * 100) + "%";
        } else {
          rangeInput[1].value = maxPrice;
          range.style.right = 100 - (maxPrice / rangeInput[1].max) * 100 + "%";
        }
      }
    });
  });

  rangeInput.forEach((input) => {
    input.addEventListener("input", (e) => {
      let minVal = parseInt(rangeInput[0].value);
      let maxVal = parseInt(rangeInput[1].value);

      if (maxVal - minVal < priceGap) {
        if (e.target.className === "range-min") {
          rangeInput[0].value = maxVal - priceGap;
        } else {
          rangeInput[1].value = minVal + priceGap;
        }
      } else {
        priceInput[0].value = minVal;
        priceInput[1].value = maxVal;
        range.style.left = ((minVal / rangeInput[0].max) * 100) + "%";
        range.style.right = 100 - (maxVal / rangeInput[1].max) * 100 + "%";
      }
    });
  });
</script>

<%- include('../partials/footer') %>